# --- !Ups

create table "USERS" ("ID" SERIAL PRIMARY KEY ,
  "FIRSTNAME" VARCHAR(100) NOT NULL ,
  "LASTNAME" VARCHAR(100) NOT NULL,
  "EMAIL" VARCHAR(250) NOT NULL UNIQUE,
  "IMAGE" BYTEA,
  "PROVIDER_ID" VARCHAR(250) NOT NULL ,
  "PROVIDER_KEY" VARCHAR(250) NOT NULL,
  UNIQUE ("PROVIDER_ID","PROVIDER_KEY"));

create table "ROLES" (
  "ID" SERIAL PRIMARY KEY ,
  "USER_ID" INTEGER REFERENCES "USERS",
  "ROLE" VARCHAR(30),
  UNIQUE ("ID","USER_ID","ROLE")
);

create table "PASSWORDINFO" (
  "ID" SERIAL PRIMARY KEY ,
  "HASHER" VARCHAR NOT NULL ,
  "PASSWORD" VARCHAR NOT NULL,
  "SALT" VARCHAR,
  "USER_ID" INTEGER REFERENCES "USERS"
);

create table "RESTAURANTS"(
  "ID" SERIAL PRIMARY KEY,
  "NAME" VARCHAR(100) NOT NULL,
  "DESCRIPTION" VARCHAR(250),
  "CATEGORY" VARCHAR(30) NOT NULL,
  "PHONE" VARCHAR(30),
  "EMAIL" VARCHAR(50),
  "IMAGE" BYTEA,
  "MENU" BYTEA,
  "WEBSITE" VARCHAR(100),
  "RATING" DOUBLE PRECISION,
  "STREET" VARCHAR(250) NOT NULL,
  "CITY" VARCHAR(250) NOT NULL,
  "ZIP" VARCHAR(10) NOT NULL,
  "LAT" DOUBLE PRECISION NOT NULL,
  "LNG" DOUBLE PRECISION NOT NULL
);

create table "COMMENTS"(
  "ID" SERIAL PRIMARY KEY,
  "CONTENT" VARCHAR(1000),
  "USER_ID" INTEGER REFERENCES "USERS",
  "RESTAURANT_ID" INTEGER REFERENCES "RESTAURANTS"
);

create table "RATINGS"(
  "ID" SERIAL PRIMARY KEY,
  "RATING" VARCHAR(1000),
  "USER_ID" INTEGER REFERENCES "USERS",
  "RESTAURANT_ID" INTEGER REFERENCES "RESTAURANTS"
);

create INDEX loginInfo_index ON "USERS" ("PROVIDER_ID","PROVIDER_KEY") ;

# --- !Downs
drop INDEX loginInfo_index;
drop table "PASSWORDINFO";
drop table "ROLES";
drop table "USERS";
drop table "RESTAURANTS";
drop table "COMMENTS";
drop table "RATINGS";